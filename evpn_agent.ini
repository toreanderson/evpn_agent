# /etc/neutron/evpn_agent.ini
# 
# This file contains configuration for the OpenStack EVPN Agent
# The commented out values are the ones used by default.


[agent]
# distributed_floating_ips:
#   Enables pre-provisioned neigh entries on IRBs for distributed virtual routed
#   floating IPs. This makes it so that ARP requests are not necessary in order to
#   discover the MAC address of a floating IP - instead the kernel's neighbour cache
#   is pre-provisioned with the IP,MAC tuple found in the Neutron database. However,
#   there are certain corner cases where the IP,MAC tuple from the database is not
#   actually correct. One example is when the internal port the floating IP is pointing
#   to is also a member of an Octavia load balancer. This makes the floating IP
#   centralised (sharing the MAC address of the router's external interface). In order
#   to support such setups, set this to any other string than "true". Note that this
#   also disables the addition of static host routes for the floating IPs when using
#   underlay leaking (l3vni=0). Disabling this is fundamentally incompatible with
#   disabling re-advertisement of connected prefixes (i.e., advertise_connected=FALSE).
#distributed_floating_ips=true

# interval:
#   number of seconds to sleep between each iteration of the main loop
#interval = 1

# l2vni_offset:
#   If set, an integer to add to the VLAN ID in order to generate a L2VNI.
#   For example, given VLAN ID 42, and an l2vni_offset of 10000, the L2VNI
#   associated with the network will be 10042 by default. This can be
#   overridden by setting the 'l2vni' attribute on each network. If unset
#   (the default), only networks with an explicit 'l2vni' attribute will be
#   advertised as L2VNIs in EVPN.
#l2vni_offset =

# loglevel:
#   The log level to use for the Python logging module. Available values:
#     DEBUG    = lots and lots of uninteresting debug (command line option: -d)
#     INFO     = tracing of general program flow (command line option: -v)
#     WARNING  = reporting on changes only
#     ERROR    = errors that probably require admin attention and may leave some
#                in a broken state (but maybe not all)
#     CRITICAL = catastrohpic errors from which the agent cannot recover
# loglevel = WARNING

# physical_network:
#   The OpenStack physical network name that represents the EVPN fabric. A
#   network object must belong to this physical network in order to be
#   processed by the EVPN agent, other networks will be ignored.
#physical_network = physnet1

# rt_proto:
#   The route protocol used for static routes set up by the agent. Only routes matching
#   this proto will be considered for garbage collection. Can be a string if a matching
#   entry is added to /etc/iproute2/rt_protos.
#rt_proto = 255

# rt_table_offset:
#   An integer added to the L3VNI (or VLAN ID) used to calculate a route table number to
#   associate with the VRF created in the kernel. This is mostly to avoid a situation
#   where L3VNI 254 ends up adding its routes to the predefined "main" routing table
#   used for the underlay, instead of a private one. The default is set so that it the
#   routing table range used exceeds the maximum VNI value (which is a 24-bit integer).
#rt_table_offset = 100000000

[bridge]
# address:
#   The MAC address if the main EVPN bridge. In order to support VM mobility,
#   this needs to be the same on all participating hypervisors. In keeping
#   with RFC9135 section 4.1, the default value is one assigned to the VRRP
#   protocol, but with an VRID (last octet) set to 0, which means it will not conflict
#   any VRRP use on the network (because the VRRP VRID must be in the range 1 thru 255).
#address = 00:00:5e:00:01:00

# name:
#   The name given to the main EVPN bridge device in the kernel.
#name = br-evpn

# mtu:
#   The MTU on the bridge device and the veth device pair. Default is chosen
#   because that seems to be the max MTU supported by most data centre
#   switches. This value will also be used for L3VNI devices, but with 50
#   bytes subtracted to compensate for the VXLAN tunneling overhead.
#mtu = 9216

# veth:
#   The name of the veth device connected to the EVPN bridge. The other end
#   of the veth device pair will be connected to the OVS bridge, cf. the [ovs]
#   section below.
#veth = veth-to-ovs


[db]
# host:
#   The hostname of the neutron database to connect to
#host =

# user:
#   The user name used when connecting to the neutron database
#user =

# password:
#   The password used when connecting to the neutron database
#password =

# database:
#   The name of the neutron database
#database = neutron


[ovs]
# name:
#   The name of the OVS bridge to connect to the EVPN bridge with a veth pair.
#name = br-ex

# veth:
#   The name of the veth device connected to the OVS bridge. The other end
#   of the veth device pair will be connected to the EVPN bridge, cf. the
#   [bridge] section above.
#veth = veth-to-evpn
